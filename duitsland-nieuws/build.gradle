// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 'git rev-list HEAD --count'.execute([], project.rootDir).text.trim().toInteger()

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

kapt {
    generateStubs = true
}

android {
    compileSdkVersion sdk.compileVersion
    buildToolsVersion sdk.buildToolsVersion

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/rxjava.properties'
    }

    defaultConfig {
        applicationId "io.supersimple.duitslandnieuws"
        minSdkVersion sdk.minVersion
        targetSdkVersion sdk.targetVersion
        versionCode versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"
        buildConfigField 'boolean', 'GIT_CLEAN', "${gitIsClean()}"
        buildConfigField 'String', 'GIT_LOCAL_REF', "\"${gitLocalRef()}\""
        buildConfigField 'String', 'BUILD_TIME', "\"${buildTime()}\""

        manifestPlaceholders = [apiBaseUrl: "http://www.duitslandnieuws.nl/wp-json/wp/v2/"]

        if (travisBuild) {
            buildConfigField 'String', 'TRAVIS_BUILD_NR', '\"' + System.getenv("TRAVIS_BUILD_NUMBER") + '\"'
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        warning 'MissingTranslation'
        warning 'InvalidPackage'
    }

    signingConfigs {
        release {
            storeFile rootProject.file("duitsland-nieuws-release.keystore")
            storePassword System.getenv("KSTOREPWD")
            keyAlias "duitsland-nieuws-app"
            keyPassword System.getenv("KEYPWD")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        qa {
            applicationIdSuffix '.qa'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    configurations.all {
        resolutionStrategy.force libraries.androidSupport
        resolutionStrategy.force libraries.androidDesign
        resolutionStrategy.force libraries.kotlin
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile libraries.androidSupport
    compile libraries.androidDesign
    //
    // Kotlin
    compile libraries.kotlin

    // RxJava
    compile libraries.rxJava
    compile libraries.rxAndroid

    //Dagger 2
    compile libraries.dagger
    kapt kaptPlugin.dagger.compiler

    // Requery persistency
    compile libraries.requery.core
    compile libraries.requery.kotlin
    compile libraries.requery.android
    kapt kaptPlugin.requery.processor

    // PaperParcel
    compile libraries.paperParcel.core
    compile libraries.paperParcel.kotlin
    kapt kaptPlugin.paperParcel.compiler

    // GSON
    compile libraries.gson

    // OkHttpClient
    compile libraries.okHttp.core
    compile libraries.okHttp.loggingInterceptor

    compile libraries.retrofit2.core
    compile libraries.retrofit2.gsonconverter
    compile libraries.retrofit2.rxjava2

    //
    // SuperSimple
    compile libraries.superSimple

    // Picasso image loading
    compile libraries.picasso

    //
    // Test-only dependencies
    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile androidTest.supportAnnotations
    androidTestCompile androidTest.testRunner
    // Set this dependency to use JUnit 4 rules
    androidTestCompile androidTest.testRules
    // Espresso
    androidTestCompile androidTest.espresso.core
    androidTestCompile(androidTest.espresso.contrib) {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile androidTest.espresso.intents

    testCompile test.junit
    //
    // UnitTest with Robolectric
    testCompile(test.robolectric) {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }

    // Mockito
    testCompile test.mockito.core
    testCompile (test.mockito.kotlin) {
        exclude group: 'org.mockito', module: 'mockito-core'
    }

    testCompile test.wiremock
    testCompile test.slf4j
}

dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = false
    orderByMethodCount = false
    verbose = false
    maxTreeDepth = Integer.MAX_VALUE
    teamCityIntegration = false
    enableForInstantRun = false
    teamCitySlug = null
    runOnEachAssemble = true
}
